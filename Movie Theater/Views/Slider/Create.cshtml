@model Movie_Theater.Models.Slider

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="wrapper-container">
    <h5 class="heading"><i class="fa-solid fa-circle-plus"></i> THÊM SLIDE</h5>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal form-input">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Img, htmlAttributes: new { @class = "control-label col-md-9" })
                @Html.ValidationMessageFor(model => model.Img, "", new { @class = "text-danger col-md-9" })
                <div class="col-md-9" style="display: flex; justify-content: space-between; align-items: end; margin-top: 20px;">
                    @Html.EditorFor(model => model.Img, new { htmlAttributes = new { @class = "form-control", style = "display:none;" } })
                    <input type="file" name="fileUpload" id="fileUpload" accept="image/*"
                           style="display:none;" />
                    <div style="flex: 1; text-align: center;">
                        @if (Model != null && Model.Img != null)
                        {
                            <img style="max-width: unset; width: 450px; " src="@Model.Img" alt="Alternate Text" id="pictureUpload" />
                        }
                        else
                        {
                            <img style="max-width: unset; width: 450px; " src="~/Areas/Admin/Content/assets/images/slide_show_default.png" alt="Alternate Text" id="pictureUpload" />
                        }
                    </div>
                    <input style="margin-bottom: 7px;" type="button" id="btnUpload" value="Chọn Ảnh" class="btn btn-success" />
                </div>
            </div>

            @section upload
{
                <script>
                    $(function () {
                        $('#btnUpload').click(function () {
                            $('#fileUpload').trigger('click');
                        });
                    });
                    $('#fileUpload').change(function () {
                        if (window.FormData !== undefined) {
                            var fileUpload = $('#fileUpload').get(0);
                            var files = fileUpload.files;
                            var formData = new FormData();
                            formData.append('file', files[0]);

                            $.ajax(
                                {
                                    type: 'POST',
                                    url: '/Slider/ProcessUpload',
                                    contentType: false,
                                    processData: false,
                                    data: formData,
                                    success: function (urlImage) {

                                        $('#pictureUpload').attr('src', urlImage);
                                        $('#Img').val(urlImage);
                                    },
                                    error: function (err) {
                                        alert('Error ', err.statusText);
                                    }
                                });
                        }
                    });
                </script>
            }

            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-9" })
                <div class="col-md-9">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-9" })
                <div class="col-md-9">
                    @Html.TextAreaFor(model => model.Description, new { @class = "form-control", rows = 4 })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-9 btn-submit">
                    <input type="submit" value="Thêm Slide" class="btn btn-default" />
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-9 btn-submit">
                    @Html.ActionLink("Trở Lại", "Index")
                </div>
            </div>
        </div>
    }
</div>
