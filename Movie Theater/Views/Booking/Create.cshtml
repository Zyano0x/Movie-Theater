@model Movie_Theater.ViewModels.ShowingViewModel
@{
    ViewBag.Title = "Đặt Vé - A Movie";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="wrapper-container">
    <div class="row movie-booking">
        @{
            foreach (var movie in Model.Movies)
            {
                <div class="img col m-b-3 l-3">
                    <img src="@movie.PosterPath" alt="">
                </div>
                <div class="body col m-b-9 l-9">
                    <div>
                        <div class="info">
                            <h6>@movie.Title</h6>
                            <p>@movie.Synopsis</p>
                            <ul>
                                <li><strong>Nhãn: </strong>@movie.Rating</li>
                                <li><strong>Thời lượng: </strong>@movie.Runtime phút</li>
                            </ul>
                        </div>
                        @Html.AntiForgeryToken()
                        <div class="booking">
                            <div>
                                @Html.LabelFor(model => model.TheatreIds, "Rạp : ", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10" style=" padding: 0;">
                                    @Html.DropDownListFor(model => model.TheatreSelectId, new SelectList(Model.Theatres, "Id", "Name"), new { @class = "form-control", id = "theatre-dropdown" })
                                    @Html.ValidationMessageFor(model => model.TheatreIds, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div id="showtimes-container">
                                @Html.LabelFor(model => model.ShowingIds, "Lịch Chiếu : ", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(model => model.ShowingSelectId, new SelectList(Model.Showings, "Id", "StartTime"), new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ShowingIds, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <button id="bookTicketsButton" class="btn btn-booking">Tiếp tục</button>
                        </div>
                    </div>
                </div>
            }
        }
    </div>
</div>
<script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
@*<script>
        $(function () {
        // Handle change event of theater dropdown
        $('#theatre-dropdown').on('change', function () {
            var selectedTheatreId = $(this).val(); // Get the selected theater ID

            // Make an AJAX call to fetch the updated showtimes based on the selected theater
            $.ajax({
                url: '/Booking/GetShowingsByTheatre',
                type: 'GET',
                data: { theatreId: selectedTheatreId },
                success: function (data) {
                    console.log(data); // Log the data to the console for debugging purposes

                    // Update the showtimes dropdown with the new data
                    var showingsDropdown = $('#ShowingSelectId');
                    showingsDropdown.empty();
                    $.each(data, function (index, item) {
                        showingsDropdown.append($('<option></option>').val(item.Id).text(convertTimestampToDateTime(item.StartTime)));
                    });

                    // Reset the selected showtime to the first option
                    showingsDropdown.val(showingsDropdown.find('option:first').val());

                    // Update the button's onclick attribute
                    updateBookTicketsButton();
                },
                error: function (xhr, status, error) {
                    console.log(xhr.responseText); // Log any error messages to the console for debugging purposes
                }
            });
        });

        // Handle change event of showtimes dropdown
        $('#ShowingSelectId').on('change', function () {
            // Update the button's onclick attribute
            updateBookTicketsButton();
        });

        // Trigger the change event on theater dropdown when the page loads
        $('#theatre-dropdown').trigger('change');

        // Function to convert Unix timestamp to formatted date and time
        function convertTimestampToDateTime(timestamp) {
            var milliseconds = parseInt(timestamp.replace("/Date(", "").replace(")/", ""));
            var date = new Date(milliseconds);
            var formattedDate = date.toLocaleString('en-US', { month: 'numeric', day: 'numeric', year: 'numeric', hour: 'numeric', minute: 'numeric', second: 'numeric', hour12: true });
            return formattedDate;
        }

        // Function to update the button's onclick attribute
        function updateBookTicketsButton() {
            var selectedShowingId = $('#ShowingSelectId').val();
            var link = '@Url.Action("Create", "Tickets")' + '?ShowingID=' + selectedShowingId;
            $('#bookTicketsButton').attr('onclick', "location.href='" + link + "'");
        }
    });
    </script>*@
<script>
    $(function () {
    // Handle change event of theater dropdown
    $('#theatre-dropdown').on('change', function () {
        var selectedTheatreId = $(this).val(); // Get the selected theater ID

        // Make an AJAX call to fetch the updated showtimes based on the selected theater and movie
        $.ajax({
            url: '/Booking/GetShowings',
            type: 'GET',
            data: {
                name: '@Model.Movie.Url',
                theatreId: selectedTheatreId
            },
            success: function (data) {
                console.log(data); // Log the data to the console for debugging purposes

                // Update the showtimes dropdown with the new data
                var showingsDropdown = $('#ShowingSelectId');
                showingsDropdown.empty();
                $.each(data, function (index, item) {
                    showingsDropdown.append($('<option></option>').val(item.Id).text(convertTimestampToDateTime(item.StartTime)));
                });

                // Reset the selected showtime to the first option
                showingsDropdown.val(showingsDropdown.find('option:first').val());

                // Update the button's onclick attribute
                updateBookTicketsButton();
            },
            error: function (xhr, status, error) {
                console.log(xhr.responseText); // Log any error messages to the console for debugging purposes
            }
        });
    });

    // Handle change event of showtimes dropdown
    $('#ShowingSelectId').on('change', function () {
        // Update the button's onclick attribute
        updateBookTicketsButton();
    });

    // Trigger the change event on theater dropdown when the page loads
    $('#theatre-dropdown').trigger('change');

    // Function to convert Unix timestamp to formatted date and time
    function convertTimestampToDateTime(timestamp) {
        var milliseconds = parseInt(timestamp.replace("/Date(", "").replace(")/", ""));
        var date = new Date(milliseconds);
        var formattedDate = date.toLocaleString('en-US', { month: 'numeric', day: 'numeric', year: 'numeric', hour: 'numeric', minute: 'numeric', second: 'numeric', hour12: true });
        return formattedDate;
    }

    // Function to update the button's onclick attribute
    function updateBookTicketsButton() {
        var selectedShowingId = $('#ShowingSelectId').val();
        var link = '@Url.Action("Create", "Tickets")' + '?ShowingID=' + selectedShowingId;
        $('#bookTicketsButton').attr('onclick', "location.href='" + link + "'");
    }
});
</script>

<style>
    .movie-booking .img img {
        border-radius: 5px;
        width: 230px;
        height: 340px;
        object-fit: cover;
    }

    .movie-booking .body > div {
        height: 100%;
        padding: 10px;
        background-color: #f3f3f3;
        border-radius: 4px;
    }

    .movie-booking .info {
        height: calc(100% - 50px);
        padding: 16px;
        border: 2px solid #5e5e5e5e;
        border-radius: 4px;
        color: #000;
    }

        .movie-booking .info h6 {
            text-align: center;
            text-transform: uppercase;
        }

        .movie-booking .info p {
            text-align: justify;
            overflow: hidden;
            display: -webkit-box;
            -webkit-box-orient: vertical;
            -webkit-line-clamp: 6;
            margin-bottom: 10px;
        }

        .movie-booking .info ul li:not(:first-child) {
            margin-top: 10px;
        }

        .movie-booking .info ul li strong {
            margin-right: 5px;
        }

    .movie-booking .booking {
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin-top: 10px;
    }
        .movie-booking .booking > div {
            display: flex;
            align-items: center;
            margin-right: 40px;
        }

            .movie-booking .booking > div label {
                width: max-content;
                margin-right: 5px;
                color: #000;
                margin-bottom: unset;
            }

            .movie-booking .booking > div select {
                width: max-content;
            }

            .movie-booking .booking > div:first-child select {
                width: 149px;
            }

        .movie-booking .booking input {
            margin-right: 10px;
            padding-left: 10px;
        }

        .movie-booking .booking button {
            color: #3a3a3a;
            background-color: #f7c12f;
            font-weight: 600;
        }

            .movie-booking .booking button:hover {
                background-color: #2eaa2e;
                color: #fff;
            }
</style>