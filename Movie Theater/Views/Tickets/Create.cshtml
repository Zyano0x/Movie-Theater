@model Movie_Theater.Models.Ticket
@using Movie_Theater.Models
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="wrapper-container">
        <h4>Ticket</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Showing.Id)

        <div>
            <dl class="dl-horizontal">
                <dt>
                    Movie Title:
                </dt>
                <dd>
                    @Html.DisplayFor(m => Model.Showing.Movie.Title)
                </dd>
                <dt>
                    Rating:
                </dt>
                <dd>
                    @Html.DisplayFor(m => Model.Showing.Movie.Rating)
                </dd>
                <dt>
                    Start Time:
                </dt>
                <dd>
                    @Html.DisplayFor(m => Model.Showing.StartTime)
                </dd>
                <dt>
                    Ticket Price:
                </dt>
                <dd>
                    @Html.DisplayFor(m => m.Price)
                </dd>
                <dd>
                    @if (@ViewBag.Advance != "Không Giảm Giá")
                    {<p class="text-info">@ViewBag.Advance</p>}
                </dd>
            </dl>
        </div>
        <br />
        <div>
            <h4>Chọn Ghế:</h4>
            <div class="seat-container">
                @foreach (var seat in ViewBag.AllSeats)
                {
                    <div class="seat-item">
                        <input type="checkbox" name="SelectedSeats" value="@seat.Value" @(seat.Disabled ? "disabled" : "") id="@seat.Value" />
                        <label for="@seat.Value">@seat.Text</label>
                    </div>
                }
            </div>
        </div>
        @Html.ValidationMessageFor(model => model.Seat, "", new { @class = "text-danger" })
        <input type="submit" id="createBtn" value="Create" class="btn btn-primary" />
    </div>
}


<div>
    @Html.ActionLink("Back to List", "Index", "Showings")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<style>
    .wrapper-container {
        width: 100%;
        max-width: 600px;
        margin: 0 auto;
        padding: 20px;
    }

    .seat-container {
        display: flex;
        flex-wrap: wrap;
    }

    .seat-item {
        display: flex;
        align-items: center;
        margin-right: 10px;
        margin-bottom: 10px;
        width: calc(100% / 10); /* Set the width to 1/8th of the container */
    }

        .seat-item input[type="checkbox"] {
            display: none;
        }

        .seat-item label {
            display: inline-block;
            padding: 5px 10px;
            border: 1px solid #ccc;
            background-color: #fff;
            cursor: pointer;
            width: 100%;
            text-align: center;
        }

        .seat-item input[type="checkbox"]:checked + label {
            background-color: #37b24d;
            color: #fff;
            border-color: #37b24d;
        }

        .seat-item input[type="checkbox"]:disabled + label {
            background-color: #f03e3e; /* Change the background color to red */
            color: #fff;
            border-color: #f03e3e;
            cursor: not-allowed;
        }

    .form-group {
        margin-top: 20px;
    }

    .btn-primary {
        background-color: #007bff;
        color: #fff;
        padding: 10px 20px;
        border: none;
        cursor: pointer;
    }

        .btn-primary:hover {
            background-color: #0056b3;
        }
</style>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        var createBtn = document.getElementById('createBtn');
        var selectedSeats = document.querySelectorAll('input[name="SelectedSeats"]:checked');

        function toggleCreateBtn() {
            createBtn.disabled = selectedSeats.length === 0;
        }

        toggleCreateBtn(); // Initially check if the "Create" input should be disabled

        // Listen for checkbox changes and update the "Create" input accordingly
        var checkboxes = document.querySelectorAll('input[name="SelectedSeats"]');
        checkboxes.forEach(function (checkbox) {
            checkbox.addEventListener('change', function () {
                selectedSeats = document.querySelectorAll('input[name="SelectedSeats"]:checked');
                toggleCreateBtn();
            });
        });
    });
</script>

