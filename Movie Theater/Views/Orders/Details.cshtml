@model Movie_Theater.Models.Order
@using Movie_Theater.Models
@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .table-bordered > thead > tr > td, .table-bordered > thead > tr > th {
        border-bottom-width: 0px;
    }

    .table > tbody > tr > th:last-child, .table > tbody > tr > td:last-child {
        display: revert;
    }
</style>
<div class="wrapper-container" style=" background-color: #2f353b;">
    <div>
        <h5 class="heading"><i class="fa-solid fa-hand-holding-dollar"></i> Thanh Toán</h5>
        <hr />
        @*<p>Trạng thái: @Model.Status</p>*@
    </div>

    <table class="table table-bordered">
        <thead>
            <tr style="color: #f7c12f">
                <th class="col-md-3">
                    Phim
                </th>
                <th class="col-md-3">
                    Thời gian chiếu
                </th>
                <th class="col-md-2">
                    Giá vé
                </th>
                <th class="col-md-1">
                    Ghế
                </th>
                <th class="col-md-2">
                    Rạp
                </th>
                @if (Model.Status == OrderStatus.Pending)
                {
                    <th class="col-md-1"></th>
                }
            </tr>
        </thead>

        <tbody>
            @foreach (var tic in Model.Tickets)
            {
                <tr>
                    <td class="col-md-3">
                        @Html.DisplayFor(modelItem => tic.Showing.Movie.Title)
                    </td>
                    <td class="col-md-3">
                        @Html.DisplayFor(modelItem => tic.Showing.StartTime)
                    </td>
                    <td class="col-md-2">
                        @Html.DisplayFor(modelItem => tic.Price)
                    </td>
                    <td class="col-md-1">
                        @Html.DisplayFor(modelItem => tic.Seat)
                    </td>
                    <td class="col-md-2">
                        @Html.DisplayFor(modelItem => tic.Showing.Theatre.Name)
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <hr />

    <table class="table table-sm table-bordered" style="width:100%">
        <tr style="color: #f7c12f">
            <th colspan="2" style="text-align:center">Tổng tiền</th>
        </tr>
        <tr>
            <td class="col-md-6">@Html.DisplayNameFor(model => model.Subtotal):</td>
            <td class="col-md-6"><span id="SubtotalValue">@Model.Subtotal.ToString("0.00") VND</span></td>
        </tr>
        <tr>
            <td class="col-md-6">@Html.DisplayNameFor(model => model.TaxAmount):</td>
            <td class="col-md-6"><span id="TaxAmountValue">@Model.TaxAmount.ToString("0.00") VND</span></td>
        </tr>
        <tr>
            <td class="col-md-6">@Html.DisplayNameFor(model => model.Total):</td>
            <td class="col-md-6" style="color: #f7c12f;"><span id="TotalValue">@Model.Total.ToString("0.00") VND</span></td>
        </tr>
    </table>
    <p class="text-align-end">
        <a href="javascript:history.go(-1)" class="btn btn btn-back font-weight-600" style="border: unset; margin-right: 5px; width: 111px;">Trở lại</a>
        @if (Model.Status == OrderStatus.Pending)
        {
            @Html.ActionLink("Thêm ghế", "Edit", "Orders", new { OrderId = Model.Id }, new { @class = "btn btn-primary mr-2 white-color font-weight-600", style = "width: 111px; background-color: #f7c12f; border: unset;" })
            @*<button type="button" class="btn btn-success white-color font-weight-600" id="checkoutButton" style="width: 111px; background-color: #f7c12f; border: unset;">Thanh Toán</button>*@
            @Html.ActionLink("Thanh Toán", "Checkout", "Orders", new { OrderId = Model.Id }, new { @class = "btn btn-success white-color font-weight-600", style = "width: 111px; background-color: #f7c12f; border: unset;" })
            <button type="button" class="btn btn-danger" id="cancelButton">Hủy Bỏ</button>
        }
    </p>
</div>

<script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
<script>
    $(function () {
        $('.delete-btn').click(function (e) {
            e.preventDefault();
            var btn = $(this);
            var id = btn.data('id');

            if (confirm("Bạn chắc chắn muốn xóa ghế này?")) {
                $.ajax({
                    url: '/Tickets/Delete',
                    type: 'POST',
                    data: { id: id },
                    success: function (result) {
                        if (result.success) {
                            btn.closest('tr').remove(); // Remove the deleted row from the table

                            // Update the subtotal, tax amount, and total
                            var subtotal = parseFloat(result.subtotal);
                            var taxAmount = parseFloat(result.taxAmount);
                            var total = parseFloat(result.total);

                            $('#SubtotalValue').text(subtotal.toFixed(2) + ' VND');
                            $('#TaxAmountValue').text(taxAmount.toFixed(2) + ' VND');
                            $('#TotalValue').text(total.toFixed(2) + ' VND');

                            // Check if there are any remaining tickets
                            var remainingTickets = $('.delete-btn').length;
                            if (remainingTickets === 0) {
                                $('#checkoutButton').prop('disabled', true);
                            }
                        } else {
                            alert(result.message);
                        }
                    },
                    error: function () {
                        alert('An error occurred while deleting the record.');
                    }
                });
            }
        });
    });
</script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        var cancelButton = document.getElementById('cancelButton');

        cancelButton.addEventListener('click', function (event) {
            event.preventDefault(); // Prevent the default button behavior

            if (confirm('Bạn có chắc chắn muốn hủy đơn hàng này?')) {
                var url = '@Url.Action("Cancel", "Orders", new { OrderId = Model.Id })';

                // Send AJAX request to cancel the order
                var xhr = new XMLHttpRequest();
                xhr.open('POST', url, true);
                xhr.setRequestHeader('Content-type', 'application/x-www-form-urlencoded');
                xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
                xhr.onreadystatechange = function () {
                    if (xhr.readyState === 4) {
                        if (xhr.status === 200) {
                            // Handle the success response
                            var response = JSON.parse(xhr.responseText);
                            if (response.success) {
                                alert('Đơn hàng đã được hủy thành công!');
                                window.location.href = '@Url.Action("Index", "Home")'; // Redirect to the home page
                            } else {
                                alert(response.error);
                            }
                        } else {
                            // Handle the error response
                            alert('Lỗi khi hủy đơn hàng!');
                        }
                    }
                };
                xhr.send();
            }
        });
    });
</script>
@*<script>
    $(document).ready(function () {
        $('#checkoutButton').click(function () {
            if ($(this).is(':disabled')) {
                return false;
            }

            // Retrieve the order ID
            var orderId = @Model.Id;

            // Send an AJAX request to the Checkout action
            $.ajax({
                url: '/Orders/Checkout',
                type: 'POST',
                data: { OrderId: orderId },
                success: function (response) {
                    // Handle the success response, if needed
                    console.log('Checkout success:', response);
                    // Perform any additional actions after successful checkout
                    // Update the button state
                    $('#checkoutButton').prop('disabled', true);
                },
                error: function (xhr, status, error) {
                    // Handle the error response, if needed
                    console.log('Checkout error:', xhr.responseText);
                    // Display an error message or take appropriate action
                }
            });
        });
    });
</script>*@


