@model Movie_Theater.ViewModels.MovieViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<section>
    <!-- Default box -->
    <div class="main-content">
        <h4 class="page-title">Chỉnh sửa phim</h4>
        <nav class="page-breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/Admin/Movies">Phim</a></li>
                <li class="breadcrumb-item active" aria-current="page">Chỉnh sửa</li>
            </ol>
        </nav>
    </div>
    <div class="row">
        <div class="col-12 col-xl-12 stretch-card">
            <div class="row flex-grow">
                <div class="col-md-12 grid-margin stretch-card">
                    <div class="card">
                        <div class="card-body">
                            @using (Html.BeginForm("Edit", "Movies", FormMethod.Post, new { enctype = "multipart/form-data" }))
                            {
                                @Html.AntiForgeryToken()

                            <div class="form-horizontal">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model.Id)

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-12 padding-left-right-unset" })
                                    <div class="col-md-12 padding-left-right-unset">
                                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.ReleaseDate, htmlAttributes: new { @class = "control-label col-md-12 padding-left-right-unset" })
                                    <div class="col-md-12 padding-left-right-unset">
                                        @Html.EditorFor(model => model.ReleaseDate, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.ReleaseDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Synopsis, htmlAttributes: new { @class = "control-label col-md-12 padding-left-right-unset" })
                                    <div class="col-md-12 padding-left-right-unset">
                                        @Html.EditorFor(model => model.Synopsis, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Synopsis, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Rating, htmlAttributes: new { @class = "control-label col-md-12 padding-left-right-unset" })
                                    <div class="col-md-12 padding-left-right-unset">
                                        @Html.EditorFor(model => model.Rating, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Rating, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Runtime, htmlAttributes: new { @class = "control-label col-md-12 padding-left-right-unset" })
                                    <div class="col-md-12 padding-left-right-unset">
                                        @Html.EditorFor(model => model.Runtime, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Runtime, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.GenreIds, "Thể Loại", htmlAttributes: new { @class = "control-label col-md-12 padding-left-right-unset" })
                                    <div class="col-md-12 padding-left-right-unset">
                                        @Html.ListBoxFor(model => model.GenreIds, new MultiSelectList(Model.Genres, "Id", "Name"), new { @class = "form-control", style = "height: 200px" })
                                        @Html.ValidationMessageFor(model => model.GenreIds, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.CastIds, "Diễn Viên", htmlAttributes: new { @class = "control-label col-md-12 padding-left-right-unset" })
                                    <div class="col-md-12 padding-left-right-unset">
                                        @Html.ListBoxFor(model => model.CastIds, new MultiSelectList(Model.Casts, "Id", "Name"), new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.CastIds, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.DirectorIds, "Đạo Diễn", htmlAttributes: new { @class = "control-label col-md-12 padding-left-right-unset" })
                                    <div class="col-md-12 padding-left-right-unset">
                                        @Html.ListBoxFor(model => model.DirectorIds, new MultiSelectList(Model.Directors, "Id", "Name"), new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.DirectorIds, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.PosterPath, htmlAttributes: new { @class = "control-label col-md-12 padding-left-right-unset" })
                                    <div class="col-md-12 padding-left-right-unset">
                                        @Html.EditorFor(model => model.PosterPath, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.PosterPath, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-md-12 padding-left-right-unset" style=" display: flex; align-items: end; margin-bottom: 30px; margin-top: 20px;">
                                        <input type="file" name="fileUpload" id="fileUpload" accept="image/*"
                                               style="display:none;" />
                                        <div style="flex: 1;text-align: center;">
                                            <img style="border-radius: 4px; max-width: unset; width: 150px; height: 223px; object-fit: cover;" src="@Model.PosterPath" alt="Alternate Text" id="pictureUpload" />
                                        </div>
                                        <input type="button" id="btnUpload" value="Chọn Ảnh" class="btn btn-success" />
                                    </div>
                                </div>

                                @section upload
{
                                    <script>
                                        $(function () {
                                            $('#btnUpload').click(function () {
                                                $('#fileUpload').trigger('click');
                                            });
                                        });
                                        $('#fileUpload').change(function () {
                                            if (window.FormData !== undefined) {
                                                var fileUpload = $('#fileUpload').get(0);
                                                var files = fileUpload.files;
                                                var formData = new FormData();
                                                formData.append('file', files[0]);

                                                $.ajax(
                                                    {
                                                        type: 'POST',
                                                        url: '/Admin/Movies/ProcessUpload',
                                                        contentType: false,
                                                        processData: false,
                                                        data: formData,
                                                        success: function (urlImage) {

                                                            $('#pictureUpload').attr('src', urlImage);
                                                            $('#PosterPath').val(urlImage);
                                                        },
                                                        error: function (err) {
                                                            alert('Error ', err.statusText);
                                                        }
                                                    });
                                            }
                                        });
                                    </script>
                                }

                                @section Scripts {
                                    @Scripts.Render("~/bundles/jqueryval")
                                }

                                <div class="form-group">
                                    @Html.LabelFor(model => model.TrailerUrl, htmlAttributes: new { @class = "control-label col-md-12 padding-left-right-unset" })
                                    <div class="col-md-12 padding-left-right-unset">
                                        @Html.EditorFor(model => model.TrailerUrl, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.TrailerUrl, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Url, htmlAttributes: new { @class = "control-label col-md-12 padding-left-right-unset" })
                                    <div class="col-md-12 padding-left-right-unset">
                                        @Html.EditorFor(model => model.Url, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Url, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group text-align-end">
                                    <div class="col-md-offset-2 col-md-12 padding-left-right-unset">
                                        <input type="submit" value="Lưu Thay Đổi" class="btn btn-danger mr-2" style="margin: 10px 0 10px 0" />
                                        <a href="/Admin/Movies" class="btn btn-secondary">Quay Lại</a>
                                    </div>
                                </div>
                            </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- /.card-body -->
</section>
