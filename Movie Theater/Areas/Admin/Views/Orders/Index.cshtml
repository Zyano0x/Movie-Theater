@model PagedList.IPagedList<Movie_Theater.Models.Order>
@using PagedList.Mvc;
@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<section>

    <!-- Default box -->
    <div class="main-content">
        <h4 class="page-title">Danh sách vé phim</h4>
        <nav class="page-breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="#">Vé phim</a></li>
                <li class="breadcrumb-item active" aria-current="page">Danh sách</li>
            </ol>
        </nav>
    </div>
    <hr />
    <div class="aside-compose text-align-end">
        <a href="/Admin/News/Create" class="btn btn-success">Thêm tin tức</a>
        <a href="#" class="btn btn-danger" id="btn-delete-all">Hủy nhiều vé</a>
    </div>
    <hr />
    @using (Html.BeginForm("Index", "Orders", FormMethod.Get, new { }))
    {
        <div>
            <div class="input-group input-group-sm" style="justify-content: end; align-items: center; height: 34px;">
                <input style="height: 100%; color: #fff; background-color: #070d19 !important; border: 1px solid #262f43; border-top-left-radius: 4px; border-bottom-left-radius: 4px; " type="text" name="Searchtext" placeholder="Tìm kiếm theo tên người dùng ... " class="col-md-4" />
                <span style="height: 100%; border-top-right-radius: 4px; border-bottom-right-radius: 4px; " class="input-group-append">
                    <button style="font-size: 14px; color: #fff; border-width: 1px 1px 1px 0; border-style: solid; border-color: #262f43; background-color: #1c2374; height: 100%; display: flex; align-items: center; " type="submit" class="btn btn-info btn-flat btn-search">Tìm kiếm</button>
                </span>
            </div>
        </div>
    }
    <hr />
    <div class="row margin-left-right-unset">
        <div class="col-12 col-xl-12 stretch-card">
            <div class="row flex-grow">
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th class="col-md-1"><input type="checkbox" id="select-all" /></th>
                            <th class="col-md-2">
                                Phim
                            </th>
                            <th class="col-md-1">
                                Tên người dùng
                            </th>
                            <th class="col-md-1">
                                Ngày Đặt
                            </th>
                            <th class="col-md-2">
                                Ghế
                            </th>
                            <th class="col-md-2">
                                Rạp
                            </th>
                            <th class="col-md-2">
                                T.Thái
                            </th>
                            <th class="col-md-1"></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var itemGroup in Model.GroupBy(x => x.Id))
                        {
                            var item = itemGroup.First();

                            <tr>
                                <td class="col-md-1">
                                    <div style="display: flex; justify-content: center; min-width: 65.84px;">
                                        @if (item.Status != Movie_Theater.Models.OrderStatus.Cancelled)
                                        {
                                            <input type="checkbox" class="check-box-item" value="@item.Id" />
                                        }
                                    </div>
                                </td>

                                <td class="col-md-2" colspan="1">
                                    <div class="min-height-content">
                                        @{
                                            var movieTitle = "";
                                            var firstTicket = item.Tickets.FirstOrDefault();
                                            if (firstTicket != null)
                                            {
                                                movieTitle = firstTicket.Showing.Movie.Title;
                                            }
                                        }
                                        @movieTitle
                                    </div>
                                </td>
                                <td class="col-md-1">
                                    @Html.DisplayFor(modelItem => item.User.UserName)
                                </td>
                                <td class="col-md-1">
                                    @Html.DisplayFor(modelItem => item.OrderDate)
                                </td>
                                <td class="col-md-2">
                                    @string.Join(" | ", item.Tickets.Select(ticket => ticket.Seat))
                                </td>
                                <td class="col-md-2">
                                    @{
                                        var theatreName = "";
                                        var firstShowing = firstTicket?.Showing;
                                        if (firstShowing != null)
                                        {
                                            theatreName = firstShowing.Theatre.Name;
                                        }
                                    }
                                    @theatreName
                                </td>
                                @{
                                    if (item.Status == Movie_Theater.Models.OrderStatus.Pending)
                                    {
                                        <td class="order-status col-md-2" id="order-status-@item.Id" style="color: red">
                                            Chưa thanh toán
                                        </td>
                                    }
                                    else if (item.Status != Movie_Theater.Models.OrderStatus.Cancelled)
                                    {
                                        <td class="order-status col-md-2" id="order-status-@item.Id" style="color: lime">
                                            Đã thanh toán
                                        </td>
                                    }
                                    else
                                    {
                                        <td class="order-status col-md-2" id="order-status-@item.Id" style="color: yellow">
                                            Đã hủy
                                        </td>
                                    }
                                }
                                <td class="col-md-1">
                                    <div style="display: flex; justify-content: space-between; min-width: 69.33px;">
                                        @if (item.Status != Movie_Theater.Models.OrderStatus.Cancelled)
                                        {
                                            <button style="margin-right: 2px; border-radius: 4px;" type="button" class="btn btn-danger cancel-button font-weight-600" data-order-id="@item.Id">Hủy</button>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

            </div>
        </div>
    </div>
    <div>
        <div class="PageNumber" style="display: flex; justify-content: center; ">
            @Html.PagedListPager(Model, page => Url.Action("Index", new { page = page }))
        </div>
    </div>
</section>

<style>
    .min-height-content {
        min-height: 30.40px;
        display: flex;
        align-items: center;
        justify-content: center;
    }
</style>

<script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
<script>
    //Cancel all
    $('body').on('click', '#btn-delete-all', function (e) {
        e.preventDefault();
        var str = "";
        var checkBox = $(this).parents('section').find('tr td input:checkbox');
        var i = 0;
        checkBox.each(function () {
            if (this.checked) {
                checkBox.attr('selected', 'checked');
                var _id = $(this).val();
                if (i === 0) {
                    str += _id;
                }
                else {
                    str += "," + _id;
                }
                i++;
            }
            else {
                checkBox.attr('selected', '');
            }
        });
        if (str.length > 0) {
            var conf = confirm('Bạn có muốn hủy các vé phim này hay không?');
            if (conf === true) {
                $.ajax({
                    url: '/Admin/Orders/CancelAll',
                    type: 'POST',
                    data: { ids: str },
                    success: function (rs) {
                        checkBox.each(function () {
                            if (this.checked) {
                                var row = $(this).closest('tr');
                                $(row).find('.order-status').text('Đã hủy').css('color', 'yellow');
                                $(row).find('.cancel-button, .check-box-item').remove();
                            }
                        }); 
                        $('body input[type="checkbox"]').prop('checked', false);
                    }
                });
            }
        }
    });

    $('body').on('change', '#select-all', function () {
        var checkStatus = this.checked;
        var checkBox = $(this).parents('.row').find('tr td input:checkbox');
        checkBox.each(function () {
            this.checked = checkStatus;
            if (this.checked) {
                checkBox.attr('selected', 'checked');
            }
            else {
                checkBox.attr('selected', '');
            }
        });
    });

    //Page list
    $(document).ready(function () {
        var maxLength = 100;
        $(".show-read-more").each(function () {
            var myStr = $(this).text();
            if ($.trim(myStr).length > maxLength) {
                var newStr = myStr.substring(0, maxLength);
                var removedStr = myStr.substring(maxLength, $.trim(myStr).length);
                $(this).empty().html(newStr);

                $(this).append('<a href="javascript:void(0);" class="read-more">xem tiếp...</a>');

                $(this).append('<span class="more-text">' + removedStr + '</span>');
            }
        });
        $(".read-more").click(function () {
            $(this).siblings(".more-text").contents().unwrap();
            $(this).remove();
        });
    });

    //Cancel
    $(document).ready(function () {
        $('.cancel-button').click(function () {
            var button = $(this);
            var orderId = button.attr('data-order-id');

            if (confirm('Bạn có chắc chắn muốn hủy đơn hàng này?')) {
                $.ajax({
                    url: '/Admin/Orders/Cancel',
                    type: 'POST',
                    data: { OrderId: orderId },
                    dataType: 'json',
                    success: function (data) {
                        if (data.success) {
                            alert('Đơn hàng đã được hủy thành công!');
                            $('#order-status-' + orderId).text('Đã hủy').css('color', 'yellow');
                            button.closest('tr').find('.check-box-item').remove();
                            button.remove();
                        } else {
                            alert(data.error);
                        }
                    },
                    error: function () {
                        alert('Lỗi khi hủy đơn hàng!');
                    }
                });
            }
        });
    });
</script>

